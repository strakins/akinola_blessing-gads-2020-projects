#Google Cloud Fundamentals: Getting Started with GKE



Objectives:

In this lab, you learn how to perform the following tasks:

	- Provision a Kubernetes cluster using Kubernetes Engine.

	- Deploy and manage Docker containers using kubectl.


## STEPS

1. Confirm that needed APIs are enabled using Google Cloud Platform (GCP) Console:

	gcloud services list --enabled

	- If not enabled, input the following to enable the APIs

		gcloud services enable container.googleapis.com

		gcloud services enable containerregistry.googleapis.com

		#(This enables Kubernetes Engine and Container registry API)


2. Start a Kubernetes Engine cluster:

	- set the zone for cluster deployment

		export MY_ZONE=us-central1-a



3. Start a Kubernetes cluster managed by Kubernetes Engine. Name the cluster webfrontend and configure it to run 2 nodes:
		
		gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2


4. After the cluster is created, check your installed version of Kubernetes using the kubectl version command:

		kubectl version


5. View your running nodes in the GCP Console:

		gcloud compute instances list


7. Run and deploy a container

	-From your Cloud Shell prompt, launch a single instance of the nginx container.

		kubectl create deploy nginx --image=nginx:1.17.10


8. View the pod running the nginx container:

		kubectl get pods


9. Expose the nginx container to the Internet:

		kubectl expose deployment nginx --port 80 --type LoadBalancer


10. View the new service:

		kubectl get services


11. Open a new web browser tab and paste your cluster's external IP address into the address bar. 
    	The default home page of the Nginx browser is displayed. 


12. Scale up the number of pods running on your service:

		kubectl scale deployment nginx --replicas 3


13. Confirm that Kubernetes has updated the number of pods:

		kubectl get pods


14. Confirm that your external IP address has not changed:

		kubectl get services